<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [UART\UART.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image UART\UART.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060061: Last Updated: Sun May 02 19:50:59 2021
<BR><P>
<H3>Maximum Stack Usage =        152 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; HieuUng9 &rArr; CheckSetUp &rArr; SetUp &rArr; SetSpeedTia &rArr; Ghi &rArr; Flash_Write_Data &rArr; HAL_FLASH_Program &rArr; FLASH_WaitForLastOperation
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1c]">ADC1_2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1c]">ADC1_2_IRQHandler</a><BR>
 <LI><a href="#[4]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">BusFault_Handler</a><BR>
 <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
 <LI><a href="#[3]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">MemManage_Handler</a><BR>
 <LI><a href="#[1]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NMI_Handler</a><BR>
 <LI><a href="#[5]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">UsageFault_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1c]">ADC1_2_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[4]">BusFault_Handler</a> from stm32f1xx_it.o(i.BusFault_Handler) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[1f]">CAN1_RX1_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[20]">CAN1_SCE_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[15]">DMA1_Channel1_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[16]">DMA1_Channel2_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[17]">DMA1_Channel3_IRQHandler</a> from stm32f1xx_it.o(i.DMA1_Channel3_IRQHandler) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[18]">DMA1_Channel4_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[19]">DMA1_Channel5_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[1a]">DMA1_Channel6_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[1b]">DMA1_Channel7_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[7]">DebugMon_Handler</a> from stm32f1xx_it.o(i.DebugMon_Handler) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[10]">EXTI0_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[32]">EXTI15_10_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[11]">EXTI1_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[12]">EXTI2_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[13]">EXTI3_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[14]">EXTI4_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[21]">EXTI9_5_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[e]">FLASH_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from stm32f1xx_it.o(i.HardFault_Handler) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[2a]">I2C1_ER_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[29]">I2C1_EV_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[2c]">I2C2_ER_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[2b]">I2C2_EV_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[3]">MemManage_Handler</a> from stm32f1xx_it.o(i.MemManage_Handler) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from stm32f1xx_it.o(i.NMI_Handler) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[b]">PVD_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from stm32f1xx_it.o(i.PendSV_Handler) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[f]">RCC_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[33]">RTC_Alarm_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[d]">RTC_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[2d]">SPI1_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[2e]">SPI2_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[3a]">SPI_DMAError</a> from stm32f1xx_hal_spi.o(i.SPI_DMAError) referenced from stm32f1xx_hal_spi.o(i.HAL_SPI_Transmit_DMA)
 <LI><a href="#[38]">SPI_DMAHalfTransmitCplt</a> from stm32f1xx_hal_spi.o(i.SPI_DMAHalfTransmitCplt) referenced from stm32f1xx_hal_spi.o(i.HAL_SPI_Transmit_DMA)
 <LI><a href="#[39]">SPI_DMATransmitCplt</a> from stm32f1xx_hal_spi.o(i.SPI_DMATransmitCplt) referenced from stm32f1xx_hal_spi.o(i.HAL_SPI_Transmit_DMA)
 <LI><a href="#[6]">SVC_Handler</a> from stm32f1xx_it.o(i.SVC_Handler) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[9]">SysTick_Handler</a> from stm32f1xx_it.o(i.SysTick_Handler) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[36]">SystemInit</a> from system_stm32f1xx.o(i.SystemInit) referenced from startup_stm32f103xb.o(.text)
 <LI><a href="#[c]">TAMPER_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[22]">TIM1_BRK_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[25]">TIM1_CC_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[24]">TIM1_TRG_COM_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[23]">TIM1_UP_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[26]">TIM2_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[27]">TIM3_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[28]">TIM4_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[2f]">USART1_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[30]">USART2_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[31]">USART3_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[34]">USBWakeUp_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[1d]">USB_HP_CAN1_TX_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[1e]">USB_LP_CAN1_RX0_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[5]">UsageFault_Handler</a> from stm32f1xx_it.o(i.UsageFault_Handler) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[a]">WWDG_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[37]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_stm32f103xb.o(.text)
 <LI><a href="#[35]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[37]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(.text)
</UL>
<P><STRONG><a name="[ab]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[3b]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[40]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[ac]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[ad]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[ae]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[af]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[b0]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>ADC1_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>CAN1_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>DMA1_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>DMA1_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>DMA1_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>DMA1_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>DMA1_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>RTC_Alarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>TAMPER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>TIM1_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>TIM1_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>TIM1_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>TIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>USART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>USBWakeUp_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>USB_HP_CAN1_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>USB_LP_CAN1_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASH_Program
</UL>

<P><STRONG><a name="[b1]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[3e]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[b2]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[b3]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[3d]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[a7]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[b4]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[3f]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[3c]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[b5]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f1xx_it.o(i.BusFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>CheckSetUp</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, main.o(i.CheckSetUp))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = CheckSetUp &rArr; SetUp &rArr; SetSpeedTia &rArr; Ghi &rArr; Flash_Write_Data &rArr; HAL_FLASH_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_ReadPin
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetUp
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng9
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng8
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng7
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng6
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng5
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng4
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng30
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng3
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng29
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng28
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng27
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng26
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng25
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng24
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng23
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng22
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng21
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng20
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng2
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng19
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng18
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng17
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng16
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng15
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng14
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng13
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng12
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng11
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng10
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng1
</UL>

<P><STRONG><a name="[17]"></a>DMA1_Channel3_IRQHandler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f1xx_it.o(i.DMA1_Channel3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = DMA1_Channel3_IRQHandler &rArr; HAL_DMA_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f1xx_it.o(i.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[65]"></a>Error_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, main.o(i.Error_Handler))
<BR><BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_MspInit
</UL>

<P><STRONG><a name="[54]"></a>FLASH_PageErase</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f1xx_hal_flash_ex.o(i.FLASH_PageErase))
<BR><BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASHEx_Erase
</UL>

<P><STRONG><a name="[46]"></a>FLASH_WaitForLastOperation</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, stm32f1xx_hal_flash.o(i.FLASH_WaitForLastOperation))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_SetErrorCode
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASH_Program
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASHEx_Erase
</UL>

<P><STRONG><a name="[49]"></a>Flash_Write_Data</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, main.o(i.Flash_Write_Data))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Flash_Write_Data &rArr; HAL_FLASH_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASH_Unlock
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASH_Program
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASH_Lock
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASH_GetError
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASHEx_Erase
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPage
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ghi
</UL>

<P><STRONG><a name="[50]"></a>Ghi</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, main.o(i.Ghi))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Ghi &rArr; Flash_Write_Data &rArr; HAL_FLASH_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Write_Data
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSpeedTia
</UL>

<P><STRONG><a name="[45]"></a>HAL_DMA_IRQHandler</STRONG> (Thumb, 316 bytes, Stack size 40 bytes, stm32f1xx_hal_dma.o(i.HAL_DMA_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_DMA_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel3_IRQHandler
</UL>

<P><STRONG><a name="[64]"></a>HAL_DMA_Init</STRONG> (Thumb, 84 bytes, Stack size 12 bytes, stm32f1xx_hal_dma.o(i.HAL_DMA_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = HAL_DMA_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_MspInit
</UL>

<P><STRONG><a name="[51]"></a>HAL_DMA_Start_IT</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, stm32f1xx_hal_dma.o(i.HAL_DMA_Start_IT))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = HAL_DMA_Start_IT &rArr; DMA_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Transmit_DMA
</UL>

<P><STRONG><a name="[43]"></a>HAL_Delay</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, stm32f1xx_hal.o(i.HAL_Delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetUpTia
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetUpCol
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSpeedTia
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSpeedCol
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaoBang8DoiSongSong
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaoBang8DoiNoiTiep
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaoBang8BaSongSong
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaoBang8
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaoBang2
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaoBang16DoiNoiTiep
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaoBang16
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NhapNhay
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckSetUp
</UL>

<P><STRONG><a name="[4c]"></a>HAL_FLASHEx_Erase</STRONG> (Thumb, 160 bytes, Stack size 32 bytes, stm32f1xx_hal_flash_ex.o(i.HAL_FLASHEx_Erase))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = HAL_FLASHEx_Erase &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_MassErase
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_PageErase
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Write_Data
</UL>

<P><STRONG><a name="[4e]"></a>HAL_FLASH_GetError</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f1xx_hal_flash.o(i.HAL_FLASH_GetError))
<BR><BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Write_Data
</UL>

<P><STRONG><a name="[4f]"></a>HAL_FLASH_Lock</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f1xx_hal_flash.o(i.HAL_FLASH_Lock))
<BR><BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Write_Data
</UL>

<P><STRONG><a name="[4d]"></a>HAL_FLASH_Program</STRONG> (Thumb, 120 bytes, Stack size 40 bytes, stm32f1xx_hal_flash.o(i.HAL_FLASH_Program))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = HAL_FLASH_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Program_HalfWord
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Write_Data
</UL>

<P><STRONG><a name="[4a]"></a>HAL_FLASH_Unlock</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f1xx_hal_flash.o(i.HAL_FLASH_Unlock))
<BR><BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Write_Data
</UL>

<P><STRONG><a name="[63]"></a>HAL_GPIO_Init</STRONG> (Thumb, 446 bytes, Stack size 40 bytes, stm32f1xx_hal_gpio.o(i.HAL_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_MspInit
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
</UL>

<P><STRONG><a name="[42]"></a>HAL_GPIO_ReadPin</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f1xx_hal_gpio.o(i.HAL_GPIO_ReadPin))
<BR><BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetUpTia
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetUpCol
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSpeedTia
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSpeedCol
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckSetUp
</UL>

<P><STRONG><a name="[47]"></a>HAL_GetTick</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f1xx_hal.o(i.HAL_GetTick))
<BR><BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WaitFlagStateUntilTimeout
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_DMATransmitCplt
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_WaitOnFlagUntilTimeout
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>

<P><STRONG><a name="[a5]"></a>HAL_IncTick</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f1xx_hal.o(i.HAL_IncTick))
<BR><BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[57]"></a>HAL_Init</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, stm32f1xx_hal.o(i.HAL_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_Init &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MspInit
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriorityGrouping
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[59]"></a>HAL_InitTick</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, stm32f1xx_hal.o(i.HAL_InitTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_InitTick &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[5a]"></a>HAL_MspInit</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, stm32f1xx_hal_msp.o(i.HAL_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[aa]"></a>HAL_NVIC_EnableIRQ</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f1xx_hal_cortex.o(i.HAL_NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5c]"></a>HAL_NVIC_SetPriority</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, stm32f1xx_hal_cortex.o(i.HAL_NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[58]"></a>HAL_NVIC_SetPriorityGrouping</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f1xx_hal_cortex.o(i.HAL_NVIC_SetPriorityGrouping))
<BR><BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[5e]"></a>HAL_RCC_ClockConfig</STRONG> (Thumb, 280 bytes, Stack size 32 bytes, stm32f1xx_hal_rcc.o(i.HAL_RCC_ClockConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = HAL_RCC_ClockConfig &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[a9]"></a>HAL_RCC_GetPCLK1Freq</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f1xx_hal_rcc.o(i.HAL_RCC_GetPCLK1Freq))
<BR><BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
</UL>

<P><STRONG><a name="[a8]"></a>HAL_RCC_GetPCLK2Freq</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f1xx_hal_rcc.o(i.HAL_RCC_GetPCLK2Freq))
<BR><BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
</UL>

<P><STRONG><a name="[5f]"></a>HAL_RCC_GetSysClockFreq</STRONG> (Thumb, 74 bytes, Stack size 20 bytes, stm32f1xx_hal_rcc.o(i.HAL_RCC_GetSysClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = HAL_RCC_GetSysClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
</UL>

<P><STRONG><a name="[60]"></a>HAL_RCC_OscConfig</STRONG> (Thumb, 778 bytes, Stack size 40 bytes, stm32f1xx_hal_rcc.o(i.HAL_RCC_OscConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_RCC_OscConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[99]"></a>HAL_SPI_ErrorCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f1xx_hal_spi.o(i.HAL_SPI_ErrorCallback))
<BR><BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_DMATransmitCplt
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_DMAError
</UL>

<P><STRONG><a name="[61]"></a>HAL_SPI_Init</STRONG> (Thumb, 178 bytes, Stack size 16 bytes, stm32f1xx_hal_spi.o(i.HAL_SPI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_SPI1_Init
</UL>

<P><STRONG><a name="[62]"></a>HAL_SPI_MspInit</STRONG> (Thumb, 138 bytes, Stack size 40 bytes, stm32f1xx_hal_msp.o(i.HAL_SPI_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Init
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Init
</UL>

<P><STRONG><a name="[66]"></a>HAL_SPI_Transmit_DMA</STRONG> (Thumb, 202 bytes, Stack size 24 bytes, stm32f1xx_hal_spi.o(i.HAL_SPI_Transmit_DMA))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = HAL_SPI_Transmit_DMA &rArr; HAL_DMA_Start_IT &rArr; DMA_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Start_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[9c]"></a>HAL_SPI_TxCpltCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f1xx_hal_spi.o(i.HAL_SPI_TxCpltCallback))
<BR><BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_DMATransmitCplt
</UL>

<P><STRONG><a name="[9a]"></a>HAL_SPI_TxHalfCpltCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f1xx_hal_spi.o(i.HAL_SPI_TxHalfCpltCallback))
<BR><BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_DMAHalfTransmitCplt
</UL>

<P><STRONG><a name="[5b]"></a>HAL_SYSTICK_Config</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, stm32f1xx_hal_cortex.o(i.HAL_SYSTICK_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_SYSTICK_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[67]"></a>HAL_UART_Init</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, stm32f1xx_hal_uart.o(i.HAL_UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = HAL_UART_Init &rArr; HAL_UART_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[68]"></a>HAL_UART_MspInit</STRONG> (Thumb, 100 bytes, Stack size 32 bytes, stm32f1xx_hal_msp.o(i.HAL_UART_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = HAL_UART_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>

<P><STRONG><a name="[6a]"></a>HAL_UART_Transmit</STRONG> (Thumb, 178 bytes, Stack size 32 bytes, stm32f1xx_hal_uart.o(i.HAL_UART_Transmit))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SendCMD
</UL>

<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f1xx_it.o(i.HardFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[6c]"></a>HienThiCot</STRONG> (Thumb, 42 bytes, Stack size 12 bytes, main.o(i.HienThiCot))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HienThiCot &rArr; SetLED &rArr; setledR
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLED
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetUpCol
</UL>

<P><STRONG><a name="[6e]"></a>HienThiCotTia</STRONG> (Thumb, 56 bytes, Stack size 12 bytes, main.o(i.HienThiCotTia))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HienThiCotTia &rArr; SetLED &rArr; setledR
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLED
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetUpTia
</UL>

<P><STRONG><a name="[6f]"></a>HieuUng1</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, main.o(i.HieuUng1))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = HieuUng1 &rArr; CheckSetUp &rArr; SetUp &rArr; SetSpeedTia &rArr; Ghi &rArr; Flash_Write_Data &rArr; HAL_FLASH_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SendCMD
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaoBang8
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaoBang16
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NhapNhay
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckSetUp
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[74]"></a>HieuUng10</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, main.o(i.HieuUng10))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = HieuUng10 &rArr; CheckSetUp &rArr; SetUp &rArr; SetSpeedTia &rArr; Ghi &rArr; Flash_Write_Data &rArr; HAL_FLASH_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SendCMD
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaoBang8
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NhapNhay
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckSetUp
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[75]"></a>HieuUng11</STRONG> (Thumb, 118 bytes, Stack size 24 bytes, main.o(i.HieuUng11))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = HieuUng11 &rArr; CheckSetUp &rArr; SetUp &rArr; SetSpeedTia &rArr; Ghi &rArr; Flash_Write_Data &rArr; HAL_FLASH_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SendCMD
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaoBang8
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaoBang16DoiNoiTiep
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NhapNhay
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckSetUp
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[77]"></a>HieuUng12</STRONG> (Thumb, 126 bytes, Stack size 24 bytes, main.o(i.HieuUng12))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = HieuUng12 &rArr; CheckSetUp &rArr; SetUp &rArr; SetSpeedTia &rArr; Ghi &rArr; Flash_Write_Data &rArr; HAL_FLASH_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SendCMD
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaoBang8BaSongSong
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaoBang16DoiNoiTiep
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NhapNhay
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckSetUp
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[79]"></a>HieuUng13</STRONG> (Thumb, 126 bytes, Stack size 24 bytes, main.o(i.HieuUng13))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = HieuUng13 &rArr; CheckSetUp &rArr; SetUp &rArr; SetSpeedTia &rArr; Ghi &rArr; Flash_Write_Data &rArr; HAL_FLASH_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SendCMD
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaoBang8DoiNoiTiep
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaoBang8BaSongSong
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NhapNhay
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckSetUp
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7b]"></a>HieuUng14</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, main.o(i.HieuUng14))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = HieuUng14 &rArr; CheckSetUp &rArr; SetUp &rArr; SetSpeedTia &rArr; Ghi &rArr; Flash_Write_Data &rArr; HAL_FLASH_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SendCMD
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaoBang8DoiSongSong
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaoBang8BaSongSong
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaoBang8
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NhapNhay
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckSetUp
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7d]"></a>HieuUng15</STRONG> (Thumb, 140 bytes, Stack size 24 bytes, main.o(i.HieuUng15))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = HieuUng15 &rArr; CheckSetUp &rArr; SetUp &rArr; SetSpeedTia &rArr; Ghi &rArr; Flash_Write_Data &rArr; HAL_FLASH_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SendCMD
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaoBang8DoiNoiTiep
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaoBang8BaSongSong
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaoBang16
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NhapNhay
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckSetUp
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7e]"></a>HieuUng16</STRONG> (Thumb, 126 bytes, Stack size 24 bytes, main.o(i.HieuUng16))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = HieuUng16 &rArr; CheckSetUp &rArr; SetUp &rArr; SetSpeedTia &rArr; Ghi &rArr; Flash_Write_Data &rArr; HAL_FLASH_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SendCMD
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaoBang8DoiSongSong
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaoBang8DoiNoiTiep
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaoBang8
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NhapNhay
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckSetUp
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7f]"></a>HieuUng17</STRONG> (Thumb, 156 bytes, Stack size 24 bytes, main.o(i.HieuUng17))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = HieuUng17 &rArr; CheckSetUp &rArr; SetUp &rArr; SetSpeedTia &rArr; Ghi &rArr; Flash_Write_Data &rArr; HAL_FLASH_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SendCMD
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaoBang8DoiNoiTiep
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaoBang8BaSongSong
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaoBang8
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaoBang16DoiNoiTiep
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NhapNhay
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckSetUp
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[80]"></a>HieuUng18</STRONG> (Thumb, 186 bytes, Stack size 24 bytes, main.o(i.HieuUng18))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = HieuUng18 &rArr; CheckSetUp &rArr; SetUp &rArr; SetSpeedTia &rArr; Ghi &rArr; Flash_Write_Data &rArr; HAL_FLASH_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SendCMD
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaoBang8BaSongSong
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaoBang8
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaoBang16DoiNoiTiep
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NhapNhay
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckSetUp
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[81]"></a>HieuUng19</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, main.o(i.HieuUng19))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = HieuUng19 &rArr; CheckSetUp &rArr; SetUp &rArr; SetSpeedTia &rArr; Ghi &rArr; Flash_Write_Data &rArr; HAL_FLASH_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SendCMD
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaoBang16DoiNoiTiep
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaoBang16
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NhapNhay
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckSetUp
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[82]"></a>HieuUng2</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, main.o(i.HieuUng2))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = HieuUng2 &rArr; CheckSetUp &rArr; SetUp &rArr; SetSpeedTia &rArr; Ghi &rArr; Flash_Write_Data &rArr; HAL_FLASH_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SendCMD
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaoBang16
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NhapNhay
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckSetUp
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[83]"></a>HieuUng20</STRONG> (Thumb, 156 bytes, Stack size 24 bytes, main.o(i.HieuUng20))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = HieuUng20 &rArr; CheckSetUp &rArr; SetUp &rArr; SetSpeedTia &rArr; Ghi &rArr; Flash_Write_Data &rArr; HAL_FLASH_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SendCMD
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaoBang8BaSongSong
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaoBang16DoiNoiTiep
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NhapNhay
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckSetUp
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[84]"></a>HieuUng21</STRONG> (Thumb, 182 bytes, Stack size 24 bytes, main.o(i.HieuUng21))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = HieuUng21 &rArr; CheckSetUp &rArr; SetUp &rArr; SetSpeedTia &rArr; Ghi &rArr; Flash_Write_Data &rArr; HAL_FLASH_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SendCMD
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaoBang8DoiNoiTiep
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaoBang8BaSongSong
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaoBang2
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NhapNhay
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckSetUp
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[86]"></a>HieuUng22</STRONG> (Thumb, 198 bytes, Stack size 24 bytes, main.o(i.HieuUng22))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = HieuUng22 &rArr; CheckSetUp &rArr; SetUp &rArr; SetSpeedTia &rArr; Ghi &rArr; Flash_Write_Data &rArr; HAL_FLASH_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SendCMD
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaoBang8DoiSongSong
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaoBang8BaSongSong
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaoBang8
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaoBang2
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NhapNhay
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckSetUp
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[87]"></a>HieuUng23</STRONG> (Thumb, 270 bytes, Stack size 24 bytes, main.o(i.HieuUng23))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = HieuUng23 &rArr; CheckSetUp &rArr; SetUp &rArr; SetSpeedTia &rArr; Ghi &rArr; Flash_Write_Data &rArr; HAL_FLASH_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SendCMD
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaoBang8BaSongSong
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaoBang8
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaoBang2
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaoBang16DoiNoiTiep
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NhapNhay
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckSetUp
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[88]"></a>HieuUng24</STRONG> (Thumb, 270 bytes, Stack size 24 bytes, main.o(i.HieuUng24))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = HieuUng24 &rArr; CheckSetUp &rArr; SetUp &rArr; SetSpeedTia &rArr; Ghi &rArr; Flash_Write_Data &rArr; HAL_FLASH_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SendCMD
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaoBang8DoiNoiTiep
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaoBang8BaSongSong
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaoBang8
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaoBang2
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaoBang16
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NhapNhay
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckSetUp
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[89]"></a>HieuUng25</STRONG> (Thumb, 254 bytes, Stack size 24 bytes, main.o(i.HieuUng25))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = HieuUng25 &rArr; CheckSetUp &rArr; SetUp &rArr; SetSpeedTia &rArr; Ghi &rArr; Flash_Write_Data &rArr; HAL_FLASH_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SendCMD
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaoBang8DoiSongSong
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaoBang8DoiNoiTiep
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaoBang8BaSongSong
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaoBang2
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaoBang16
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NhapNhay
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckSetUp
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8a]"></a>HieuUng26</STRONG> (Thumb, 326 bytes, Stack size 24 bytes, main.o(i.HieuUng26))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = HieuUng26 &rArr; CheckSetUp &rArr; SetUp &rArr; SetSpeedTia &rArr; Ghi &rArr; Flash_Write_Data &rArr; HAL_FLASH_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SendCMD
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaoBang8DoiNoiTiep
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaoBang8BaSongSong
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaoBang8
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaoBang2
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaoBang16
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NhapNhay
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckSetUp
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8b]"></a>HieuUng27</STRONG> (Thumb, 324 bytes, Stack size 24 bytes, main.o(i.HieuUng27))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = HieuUng27 &rArr; CheckSetUp &rArr; SetUp &rArr; SetSpeedTia &rArr; Ghi &rArr; Flash_Write_Data &rArr; HAL_FLASH_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SendCMD
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaoBang8DoiSongSong
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaoBang8BaSongSong
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaoBang8
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaoBang2
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaoBang16DoiNoiTiep
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaoBang16
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NhapNhay
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckSetUp
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8c]"></a>HieuUng28</STRONG> (Thumb, 212 bytes, Stack size 24 bytes, main.o(i.HieuUng28))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = HieuUng28 &rArr; CheckSetUp &rArr; SetUp &rArr; SetSpeedTia &rArr; Ghi &rArr; Flash_Write_Data &rArr; HAL_FLASH_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SendCMD
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaoBang8DoiSongSong
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaoBang8BaSongSong
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaoBang8
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaoBang2
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NhapNhay
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckSetUp
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8d]"></a>HieuUng29</STRONG> (Thumb, 162 bytes, Stack size 24 bytes, main.o(i.HieuUng29))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = HieuUng29 &rArr; CheckSetUp &rArr; SetUp &rArr; SetSpeedTia &rArr; Ghi &rArr; Flash_Write_Data &rArr; HAL_FLASH_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SendCMD
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaoBang8BaSongSong
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaoBang8
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaoBang2
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaoBang16DoiNoiTiep
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NhapNhay
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckSetUp
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8e]"></a>HieuUng3</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, main.o(i.HieuUng3))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = HieuUng3 &rArr; CheckSetUp &rArr; SetUp &rArr; SetSpeedTia &rArr; Ghi &rArr; Flash_Write_Data &rArr; HAL_FLASH_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SendCMD
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaoBang8DoiNoiTiep
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaoBang16
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NhapNhay
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckSetUp
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8f]"></a>HieuUng30</STRONG> (Thumb, 202 bytes, Stack size 16 bytes, main.o(i.HieuUng30))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = HieuUng30 &rArr; CheckSetUp &rArr; SetUp &rArr; SetSpeedTia &rArr; Ghi &rArr; Flash_Write_Data &rArr; HAL_FLASH_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SendCMD
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaoBang8BaSongSong
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaoBang8
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaoBang16
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NhapNhay
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckSetUp
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[90]"></a>HieuUng4</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, main.o(i.HieuUng4))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = HieuUng4 &rArr; CheckSetUp &rArr; SetUp &rArr; SetSpeedTia &rArr; Ghi &rArr; Flash_Write_Data &rArr; HAL_FLASH_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SendCMD
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaoBang8
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaoBang16
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NhapNhay
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckSetUp
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[91]"></a>HieuUng5</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, main.o(i.HieuUng5))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = HieuUng5 &rArr; CheckSetUp &rArr; SetUp &rArr; SetSpeedTia &rArr; Ghi &rArr; Flash_Write_Data &rArr; HAL_FLASH_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SendCMD
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaoBang8DoiSongSong
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaoBang8
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NhapNhay
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckSetUp
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[92]"></a>HieuUng6</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, main.o(i.HieuUng6))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = HieuUng6 &rArr; CheckSetUp &rArr; SetUp &rArr; SetSpeedTia &rArr; Ghi &rArr; Flash_Write_Data &rArr; HAL_FLASH_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SendCMD
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaoBang8
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaoBang16
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NhapNhay
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckSetUp
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[93]"></a>HieuUng7</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, main.o(i.HieuUng7))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = HieuUng7 &rArr; CheckSetUp &rArr; SetUp &rArr; SetSpeedTia &rArr; Ghi &rArr; Flash_Write_Data &rArr; HAL_FLASH_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SendCMD
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaoBang8BaSongSong
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaoBang16
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NhapNhay
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckSetUp
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[94]"></a>HieuUng8</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, main.o(i.HieuUng8))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = HieuUng8 &rArr; CheckSetUp &rArr; SetUp &rArr; SetSpeedTia &rArr; Ghi &rArr; Flash_Write_Data &rArr; HAL_FLASH_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SendCMD
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaoBang8DoiNoiTiep
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaoBang16
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NhapNhay
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckSetUp
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[95]"></a>HieuUng9</STRONG> (Thumb, 134 bytes, Stack size 24 bytes, main.o(i.HieuUng9))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = HieuUng9 &rArr; CheckSetUp &rArr; SetUp &rArr; SetSpeedTia &rArr; Ghi &rArr; Flash_Write_Data &rArr; HAL_FLASH_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SendCMD
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaoBang8DoiSongSong
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaoBang8DoiNoiTiep
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NhapNhay
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckSetUp
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[98]"></a>LED_init</STRONG> (Thumb, 66 bytes, Stack size 20 bytes, main.o(i.LED_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = LED_init
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetUp
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaoBang8DoiSongSong
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaoBang8DoiNoiTiep
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaoBang8BaSongSong
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaoBang8
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaoBang2
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaoBang16DoiNoiTiep
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaoBang16
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NhapNhay
</UL>

<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f1xx_it.o(i.MemManage_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f1xx_it.o(i.NMI_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[73]"></a>NhapNhay</STRONG> (Thumb, 204 bytes, Stack size 24 bytes, main.o(i.NhapNhay))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = NhapNhay &rArr; SetLED &rArr; setledR
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLED
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_init
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng9
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng8
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng7
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng6
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng5
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng4
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng30
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng3
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng29
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng28
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng27
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng26
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng25
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng24
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng23
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng22
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng21
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng20
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng2
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng19
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng18
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng17
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng16
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng15
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng14
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng13
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng12
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng11
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng10
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng1
</UL>

<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f1xx_it.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f1xx_it.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[71]"></a>SaoBang16</STRONG> (Thumb, 214 bytes, Stack size 56 bytes, main.o(i.SaoBang16))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = SaoBang16 &rArr; SetLED &rArr; setledR
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLED
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_init
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng8
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng7
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng6
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng4
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng30
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng3
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng27
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng26
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng25
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng24
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng2
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng19
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng15
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng1
</UL>

<P><STRONG><a name="[76]"></a>SaoBang16DoiNoiTiep</STRONG> (Thumb, 432 bytes, Stack size 56 bytes, main.o(i.SaoBang16DoiNoiTiep))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = SaoBang16DoiNoiTiep &rArr; SetLED &rArr; setledR
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLED
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_init
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng29
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng27
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng23
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng20
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng19
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng18
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng17
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng12
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng11
</UL>

<P><STRONG><a name="[85]"></a>SaoBang2</STRONG> (Thumb, 260 bytes, Stack size 56 bytes, main.o(i.SaoBang2))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = SaoBang2 &rArr; SetLED &rArr; setledR
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLED
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_init
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng29
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng28
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng27
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng26
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng25
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng24
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng23
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng22
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng21
</UL>

<P><STRONG><a name="[72]"></a>SaoBang8</STRONG> (Thumb, 212 bytes, Stack size 56 bytes, main.o(i.SaoBang8))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = SaoBang8 &rArr; SetLED &rArr; setledR
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLED
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_init
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSpeedTia
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSpeedCol
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng6
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng5
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng4
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng30
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng29
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng28
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng27
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng26
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng24
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng23
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng22
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng18
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng17
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng16
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng14
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng11
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng10
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng1
</UL>

<P><STRONG><a name="[78]"></a>SaoBang8BaSongSong</STRONG> (Thumb, 446 bytes, Stack size 56 bytes, main.o(i.SaoBang8BaSongSong))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = SaoBang8BaSongSong &rArr; SetLED &rArr; setledR
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLED
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_init
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng7
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng30
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng29
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng28
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng27
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng26
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng25
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng24
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng23
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng22
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng21
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng20
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng18
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng17
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng15
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng14
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng13
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng12
</UL>

<P><STRONG><a name="[7a]"></a>SaoBang8DoiNoiTiep</STRONG> (Thumb, 442 bytes, Stack size 56 bytes, main.o(i.SaoBang8DoiNoiTiep))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = SaoBang8DoiNoiTiep &rArr; SetLED &rArr; setledR
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLED
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_init
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng9
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng8
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng3
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng26
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng25
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng24
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng21
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng17
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng16
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng15
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng13
</UL>

<P><STRONG><a name="[7c]"></a>SaoBang8DoiSongSong</STRONG> (Thumb, 352 bytes, Stack size 56 bytes, main.o(i.SaoBang8DoiSongSong))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = SaoBang8DoiSongSong &rArr; SetLED &rArr; setledR
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLED
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_init
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng9
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng5
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng28
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng27
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng25
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng22
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng16
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng14
</UL>

<P><STRONG><a name="[6d]"></a>SetLED</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, main.o(i.SetLED))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = SetLED &rArr; setledR
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setledR
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setledG
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setledB
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaoBang8DoiSongSong
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaoBang8DoiNoiTiep
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaoBang8BaSongSong
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaoBang8
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaoBang2
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaoBang16DoiNoiTiep
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaoBang16
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NhapNhay
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HienThiCotTia
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HienThiCot
</UL>

<P><STRONG><a name="[a1]"></a>SetSpeedCol</STRONG> (Thumb, 162 bytes, Stack size 16 bytes, main.o(i.SetSpeedCol))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = SetSpeedCol &rArr; SaoBang8 &rArr; SetLED &rArr; setledR
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_ReadPin
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaoBang8
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetUp
</UL>

<P><STRONG><a name="[a2]"></a>SetSpeedTia</STRONG> (Thumb, 172 bytes, Stack size 16 bytes, main.o(i.SetSpeedTia))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = SetSpeedTia &rArr; Ghi &rArr; Flash_Write_Data &rArr; HAL_FLASH_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_ReadPin
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaoBang8
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ghi
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetUp
</UL>

<P><STRONG><a name="[44]"></a>SetUp</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, main.o(i.SetUp))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = SetUp &rArr; SetSpeedTia &rArr; Ghi &rArr; Flash_Write_Data &rArr; HAL_FLASH_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetUpTia
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetUpCol
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSpeedTia
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSpeedCol
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_init
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckSetUp
</UL>

<P><STRONG><a name="[a3]"></a>SetUpCol</STRONG> (Thumb, 154 bytes, Stack size 16 bytes, main.o(i.SetUpCol))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = SetUpCol &rArr; HienThiCot &rArr; SetLED &rArr; setledR
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_ReadPin
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HienThiCot
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetUp
</UL>

<P><STRONG><a name="[a4]"></a>SetUpTia</STRONG> (Thumb, 142 bytes, Stack size 16 bytes, main.o(i.SetUpTia))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = SetUpTia &rArr; HienThiCotTia &rArr; SetLED &rArr; setledR
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_ReadPin
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HienThiCotTia
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetUp
</UL>

<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f1xx_it.o(i.SysTick_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_IncTick
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[a6]"></a>SystemClock_Config</STRONG> (Thumb, 94 bytes, Stack size 72 bytes, main.o(i.SystemClock_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = SystemClock_Config &rArr; HAL_RCC_ClockConfig &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[36]"></a>SystemInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, system_stm32f1xx.o(i.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(.text)
</UL>
<P><STRONG><a name="[70]"></a>UART_SendCMD</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, main.o(i.UART_SendCMD))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = UART_SendCMD &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng9
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng8
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng7
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng6
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng5
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng4
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng30
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng3
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng29
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng28
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng27
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng26
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng25
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng24
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng23
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng22
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng21
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng20
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng2
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng19
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng18
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng17
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng16
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng15
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng14
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng13
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng12
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng11
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng10
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng1
</UL>

<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f1xx_it.o(i.UsageFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[b6]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[b7]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[b8]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[35]"></a>main</STRONG> (Thumb, 436 bytes, Stack size 8 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = main &rArr; HieuUng9 &rArr; CheckSetUp &rArr; SetUp &rArr; SetSpeedTia &rArr; Ghi &rArr; Flash_Write_Data &rArr; HAL_FLASH_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Transmit_DMA
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SendCMD
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng9
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng8
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng7
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng6
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng5
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng4
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng30
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng3
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng29
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng28
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng27
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng26
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng25
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng24
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng23
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng22
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng21
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng20
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng2
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng19
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng18
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng17
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng16
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng15
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng14
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng13
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng12
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng11
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng10
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HieuUng1
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_SPI1_Init
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[a0]"></a>setledB</STRONG> (Thumb, 194 bytes, Stack size 12 bytes, main.o(i.setledB))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = setledB
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLED
</UL>

<P><STRONG><a name="[9f]"></a>setledG</STRONG> (Thumb, 194 bytes, Stack size 12 bytes, main.o(i.setledG))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = setledG
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLED
</UL>

<P><STRONG><a name="[9e]"></a>setledR</STRONG> (Thumb, 192 bytes, Stack size 12 bytes, main.o(i.setledR))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = setledR
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLED
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[4b]"></a>GetPage</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, main.o(i.GetPage))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GetPage
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Write_Data
</UL>

<P><STRONG><a name="[96]"></a>MX_GPIO_Init</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, main.o(i.MX_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = MX_GPIO_Init &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[97]"></a>MX_SPI1_Init</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, main.o(i.MX_SPI1_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = MX_SPI1_Init &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3a]"></a>SPI_DMAError</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, stm32f1xx_hal_spi.o(i.SPI_DMAError))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SPI_DMAError
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_ErrorCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32f1xx_hal_spi.o(i.HAL_SPI_Transmit_DMA)
</UL>
<P><STRONG><a name="[38]"></a>SPI_DMAHalfTransmitCplt</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, stm32f1xx_hal_spi.o(i.SPI_DMAHalfTransmitCplt))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SPI_DMAHalfTransmitCplt
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_TxHalfCpltCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32f1xx_hal_spi.o(i.HAL_SPI_Transmit_DMA)
</UL>
<P><STRONG><a name="[39]"></a>SPI_DMATransmitCplt</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, stm32f1xx_hal_spi.o(i.SPI_DMATransmitCplt))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = SPI_DMATransmitCplt &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_TxCpltCallback
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_ErrorCallback
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_EndRxTxTransaction
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32f1xx_hal_spi.o(i.HAL_SPI_Transmit_DMA)
</UL>
<P><STRONG><a name="[9b]"></a>SPI_EndRxTxTransaction</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, stm32f1xx_hal_spi.o(i.SPI_EndRxTxTransaction))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SPI_EndRxTxTransaction &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_DMATransmitCplt
</UL>

<P><STRONG><a name="[9d]"></a>SPI_WaitFlagStateUntilTimeout</STRONG> (Thumb, 180 bytes, Stack size 32 bytes, stm32f1xx_hal_spi.o(i.SPI_WaitFlagStateUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_EndRxTxTransaction
</UL>

<P><STRONG><a name="[52]"></a>DMA_SetConfig</STRONG> (Thumb, 42 bytes, Stack size 12 bytes, stm32f1xx_hal_dma.o(i.DMA_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = DMA_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Start_IT
</UL>

<P><STRONG><a name="[5d]"></a>__NVIC_SetPriority</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, stm32f1xx_hal_cortex.o(i.__NVIC_SetPriority))
<BR><BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
</UL>

<P><STRONG><a name="[56]"></a>FLASH_Program_HalfWord</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f1xx_hal_flash.o(i.FLASH_Program_HalfWord))
<BR><BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASH_Program
</UL>

<P><STRONG><a name="[48]"></a>FLASH_SetErrorCode</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, stm32f1xx_hal_flash.o(i.FLASH_SetErrorCode))
<BR><BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>

<P><STRONG><a name="[53]"></a>FLASH_MassErase</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f1xx_hal_flash_ex.o(i.FLASH_MassErase))
<BR><BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASHEx_Erase
</UL>

<P><STRONG><a name="[69]"></a>UART_SetConfig</STRONG> (Thumb, 178 bytes, Stack size 16 bytes, stm32f1xx_hal_uart.o(i.UART_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UART_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK2Freq
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK1Freq
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>

<P><STRONG><a name="[6b]"></a>UART_WaitOnFlagUntilTimeout</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, stm32f1xx_hal_uart.o(i.UART_WaitOnFlagUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
